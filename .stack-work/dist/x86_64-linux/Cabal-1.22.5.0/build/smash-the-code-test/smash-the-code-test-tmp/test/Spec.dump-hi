
==================== FINAL INTERFACE ====================
2016-04-30 18:34:50.329431 UTC

interface main@main:Main 7103
  interface hash: b3d82718e05f94b9ea19c12c5de281c6
  ABI hash: 71848c7422cfe3021a5be3cb91a1d5ee
  export-list hash: bed9662995e23c8e1fcff8dc4afb5275
  orphan hash: 0d35bd0ab8279e913f080bb25876b0ef
  flag hash: d8b9ca94756f9909777bcd33d37e2c52
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.1@HUnit_7IPmJa5HmrxHl6ny5upchm
                      QuickCheck-2.8.1@Quick_8UnGnTXfSEEClQczG6tI7s
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hspec-core-2.2.3@hspec_4UV9BPgETueK7aJl0V8l4h
                      hspec-expectations-0.7.2@hspec_EI4zRR5iBcZEoRZjsgGwGV
                      hspec-2.2.3@hspec_JWyjr3DNMsw1kiPzf88M5w integer-gmp-1.0.0.0
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      quickcheck-io-0.1.2@quick_A5Zzw8XvjxiJY6Cv5Y02Ts
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      setenv-0.1.1.3@seten_6IUqFDI6NejGrNz9ulqEjc
                      smash-the-code-0.1.0.0@smash_9zgRM7VVSrM9VOCDLt75FU
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD template-haskell-2.10.0.0
                      tf-random-0.5@tfran_1eLmkn3WUnC8NZpPuDLGKF
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         quickcheck-io-0.1.2@quick_A5Zzw8XvjxiJY6Cv5Y02Ts:Test.QuickCheck.IO
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         hspec-core-2.2.3@hspec_4UV9BPgETueK7aJl0V8l4h:Test.Hspec.Core.Example
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map 1800ccac43fd924c376b60eac12f4d04
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base 61f4bf9a28a6b2eb8805b671ced219c1
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  hspec-core-2.2.3@hspec_4UV9BPgETueK7aJl0V8l4h:Test.Hspec.Core.Runner bed1157588d079a66874b5678d4c85cd
import  -/  hspec-core-2.2.3@hspec_4UV9BPgETueK7aJl0V8l4h:Test.Hspec.Core.Spec 74843d7bd24da206dfb1313afc8da8b4
import  -/  hspec-expectations-0.7.2@hspec_EI4zRR5iBcZEoRZjsgGwGV:Test.Hspec.Expectations 18134981f5d20eed1be91afe322bfb1a
import  -/  hspec-2.2.3@hspec_JWyjr3DNMsw1kiPzf88M5w:Test.Hspec c6adcf063e6e71136953b6ff676fbb2e
import  -/  smash-the-code-0.1.0.0@smash_9zgRM7VVSrM9VOCDLt75FU:Lib 65c9fd49762863ec9e1ef8c7a054e293
24aa53d77cc12192f71bdc7549432485
  $sfromList ::
    [((Lib.Colonne, Lib.Ligne), a)]
    -> Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a ds :: [((Lib.Colonne, Lib.Ligne), a)] ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { (,) ipv ipv1 ->
                           Data.Map.Base.Bin
                             @ (Lib.Colonne, Lib.Ligne)
                             @ a
                             1
                             dt
                             x
                             (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a)
                             (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# x# y#) of wild6 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# x# y#) of wild7 {
                                  GHC.Types.False
                                  -> Main.$sfromList1
                                       @ a
                                       (Data.Map.Base.Bin
                                          @ (Lib.Colonne, Lib.Ligne)
                                          @ a
                                          1
                                          ww
                                          x
                                          (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a)
                                          (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a))
                                       wild2
                                  GHC.Types.True
                                  -> case ww2 of wild8 { GHC.Types.I# x1 ->
                                     case ww5 of wild9 { GHC.Types.I# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=# x1 y) of wild10 {
                                       GHC.Types.False
                                       -> Main.$wpoly_go10
                                            @ a
                                            1
                                            (Data.Map.Base.Bin
                                               @ (Lib.Colonne, Lib.Ligne)
                                               @ a
                                               1
                                               ww
                                               x
                                               (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a)
                                               (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a))
                                            wild2
                                       GHC.Types.True
                                       -> Main.$sfromList1
                                            @ a
                                            (Data.Map.Base.Bin
                                               @ (Lib.Colonne, Lib.Ligne)
                                               @ a
                                               1
                                               ww
                                               x
                                               (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a)
                                               (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a))
                                            wild2 } } } }
                             GHC.Types.True
                             -> Main.$wpoly_go10
                                  @ a
                                  1
                                  (Data.Map.Base.Bin
                                     @ (Lib.Colonne, Lib.Ligne)
                                     @ a
                                     1
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a)
                                     (Data.Map.Base.Tip @ (Lib.Colonne, Lib.Ligne) @ a))
                                  wild2 } } } } } } } } }) -}
ac8cf507668fbb1f6498abc4cf778340
  $sfromList1 ::
    Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a1
    -> [((Lib.Colonne, Lib.Ligne), a1)]
    -> Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
61cbe71fefd35c4a055eaee6d7ee1b19
  $w$sgo10 ::
    Lib.Colonne
    -> Lib.Ligne
    -> a1
    -> Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a1
    -> Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a1
  {- Arity: 4, Strictness: <L,U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
543ab1e8011d9c09ba6c5e6b00bc3b07
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a
    -> [((Lib.Colonne, Lib.Ligne), a)]
    -> Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
8ea45bd9abb598b591677e1c37a68d8a
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5ecaef28f4300fef68bcf9e5d5b08fc0
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Options.defaultConfig
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.NTCo:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.NTCo:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0 -> (# ipv, GHC.Tuple.() #) } } } }) -}
652be80c576def37cb2524e85326e8f9
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Lib.Ligne
                   Main.main16
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main12
                   Main.main11) -}
3a4f333f386319dd1a98ca27f65fba22
  main100 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Main.main101
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
956dbb4f36533049547f10f0cd92f4d0
  main101 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main102) -}
d5581c3b41e834d3baedd3a108fbaa05
  main102 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Main.main103) -}
940733ee5c5bf5076aa87c0b787102bf
  main103 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main104
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
1077f23ea5f59653ff80669e08a2f160
  main104 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main37, Main.main105)) -}
7c64cf9f90fb5531996a4ab1007eb363
  main105 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main34
                   Main.main35
                   Main.main34
                   Main.main34) -}
fc3ca53e350528426daaacc0b6c9ed6d
  main106 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main107
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
de04951951e2df81c4df2d3739789f45
  main107 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Main.main117
                   Main.main116
                   Main.main108 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
19e11dde6b6af251ed453e58495b6334
  main108 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Lib.Ligne
                   Main.main109
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main44
                   Main.main13) -}
9d57f95a78f58470659d5e18c4944591
  main109 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main110) -}
0892838cd67007d289cc383650b56c20
  main11 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3) -}
eab0ef309cd709834bdbc751e7b767d8
  main110 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main111
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c0c658174131eda6ce44e1810b033e8d
  main111 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main26, Main.main112)) -}
313f9df75976b13a23a811532d80d30b
  main112 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main115
                   Main.main114
                   Main.main115
                   Main.main113) -}
a9075709bcfd917f699ecd2ea0f01cd4
  main113 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 61) -}
dae28893f46a1f43cde681b953d51043
  main114 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 51) -}
0b49d21711f27982a24ea1ef00b6f9ab
  main115 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
4e3b15bfab32c77ed3ab18120e5444ae
  main116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Pour une grille vide, la premi\\195\\168re ligne vide de la colonne 1 est 1"#) -}
b1ec316ca3ceab3808411ce1cdf2be1d
  main117 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Main.main118
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
6a04a4c7d06182211afe6d481eb5dad2
  main118 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main119) -}
24c9e47a104e20cb000c8c901725ccee
  main119 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Main.main120) -}
e6094cca40a03f0384cab2931b82be7c
  main12 :: Lib.Ligne
  {- Unfolding: (case Lib.$wtestLigne
                        Main.main14
                        Main.main13
                        1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
906ce51dbb00d62b9a07d315865a7aa7
  main120 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main121
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c09b94a57eeb5b65046d39bf0e43ffd6
  main121 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main37, Main.main122)) -}
abb2f8929a0c8c904fd94e0779d2ae9e
  main122 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main35
                   Main.main35
                   Main.main35
                   Main.main34) -}
a027f7c03810388fb6020fbcf8232efa
  main123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main125
                   Main.main124) -}
0f1959b3655ee14069b29879893a3540
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "auteur de la grille"#) -}
441dec8e1c2d2f218cc35b497a038c70
  main125 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'H') -}
76e5d744313b80d4e03b861ba4789599
  main126 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
422c5267194b38495dbe0bad4ca508a0
  main13 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1) -}
3a8c819839ce849a89f8109ef3100d4c
  main14 :: Lib.Grille
  {- Unfolding: (Lib.ajouterDeuxBlocs
                   Main.main15
                   Main.main13
                   Lib.Bleu) -}
83d3ce79cedc7e3dd2ba16a2da56a5ab
  main15 :: Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) Lib.Couleur
  {- Unfolding: (Main.$sfromList
                   @ Lib.Couleur
                   (GHC.Types.[] @ ((Lib.Colonne, Lib.Ligne), Lib.Couleur))) -}
db4c326238a4efaca1713442d3917e5b
  main16 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main17) -}
395953f3e7a591818b0151941fcaef9e
  main17 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main18
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
66430e757217f4e2a0fbc6f05cacc52e
  main18 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main26, Main.main19)) -}
c0c8ab5e2279187edb4728e5cd99906e
  main19 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main22
                   Main.main21
                   Main.main22
                   Main.main20) -}
a2c9199d5c9e3f6fc63eb920679a762d
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# s, Main.main3 #)) -}
07c46f759ccf0aa13003a7e8d1466d2e
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 87) -}
7619ceccaae5b1b00c34fde07e90bc52
  main21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 77) -}
3f84733eda738556e3dcc0726b354b7c
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 19) -}
1360345aebe8d994cdbe7d3e9c1dea45
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Spec.hs"#) -}
47f483c6d73827f44ecc75bbf79586ed
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
d0916892820428c63fc4009644187aaf
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
4ff11e24ed17c50b4183cea56d08ef11
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
53b0875979ad44f089aaf1b307455cf3
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Si on ajoute deux blocs, la premi\\195\\168re ligne vide doit \\195\\170tre 3"#) -}
41a60c11f0446f24bacb231ddad09d91
  main28 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Main.main29
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
5b41cf6f2920e556ca9e26d51af5065f
  main29 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main30) -}
0a44bdcc07cbe532453ec83a7484ff88
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
0019e95cb09177b74db311a55f3f98ce
  main30 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Main.main31) -}
43a6989fcadc8456a55e1f04e8ca07ba
  main31 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main32
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
bdadfc175ae891b2cde8136eb4aa2e7d
  main32 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main37, Main.main33)) -}
c35e38ee36c9eb63f70d19b96b91c0ce
  main33 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main36
                   Main.main35
                   Main.main36
                   Main.main34) -}
f97cd5926a148cb298f9923b4a94b786
  main34 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 11) -}
18bd21aff3196157623b2955132f252d
  main35 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9) -}
61b7b81f72a1273e3cb93c69817ab1d3
  main36 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18) -}
76614ebc67b5e362b37518bb842502d4
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
921e695c6bd293e0853c8a3a2d19c3c6
  main38 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main39
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
8fd733e525debaab7e50437c372cc534
  main39 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Main.main53
                   Main.main52
                   Main.main40 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
74c21215d3307f799f3b146be58d9495
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main63
                   Main.main5) -}
b404686f759eec7bb09ae2bed5556941
  main40 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Lib.Ligne
                   Main.main45
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main42
                   Main.main41) -}
5867387e02012d7d876d0325cb3eb95c
  main41 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2) -}
4604dc5785bc5ac30abb3d46e019ba21
  main42 :: Lib.Ligne
  {- Unfolding: (case Lib.$wtestLigne
                        Main.main43
                        Main.main13
                        1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
9c8cf1348ed72323eb73857eb132842f
  main43 :: Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) Lib.Couleur
  {- Unfolding: (Lib.$w$sgo10
                   @ Lib.Couleur
                   Main.main13
                   Main.main44
                   Lib.Bleu
                   Main.main15) -}
3749e469a9ea7590d8e146a5fbb31bf1
  main44 :: Lib.Ligne
  {- Unfolding: (case Lib.$wtestLigne
                        Main.main15
                        Main.main13
                        1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
a4b14214532c7200b14affcdc35d80c6
  main45 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main46) -}
dbd9bbc5a9664a8f2b4918c601f23a5e
  main46 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main47
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
ee559eae11ca439ea4f2e955d29b4b89
  main47 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main26, Main.main48)) -}
4f3c1088601ba9ee6ad21d5aba6952be
  main48 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main51
                   Main.main50
                   Main.main51
                   Main.main49) -}
065d3e86dde6c387827cc9dbcbdbe80f
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 78) -}
1a94f5966548a84e6696d98be0cfb185
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main6
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
260a2191ce7f212b839629955438ff6c
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 68) -}
f83cf74bc32493f7944dbb6cab74ba2e
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17) -}
6733b32c9ad3d586348fae128ede8388
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Si on ajoute un bloc, la premi\\195\\168re ligne vide doit \\195\\170tre 2"#) -}
33a4ab7fa2d59be03dd9d41af66ce3be
  main53 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Main.main54
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
b336c21d560df2b76301f96d6c25604b
  main54 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main55) -}
8749555e19c58a3108e62cd04196680e
  main55 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Main.main56) -}
42483aaa5a8312d2a349cf517c1ff529
  main56 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main57
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
85a5c5b09e420e8d2010c54235cc01a4
  main57 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main37, Main.main58)) -}
fca74d29fbb156e659d1a754455180c3
  main58 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main59
                   Main.main35
                   Main.main59
                   Main.main34) -}
2cebb9f5be5225b54c976656a0362eb6
  main59 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16) -}
124edc63ba463d1063231cd63471fc0a
  main6 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main60
                   Main.main7) -}
34742daa784f5b4662009a794cd0cb13
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main61) -}
5ca544b4a135d942713c0bb686d2fb3d
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "jout de bloc"#) -}
68a03cce200978c98ee264f2fb6ded59
  main62 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'A') -}
a9b21ad35ccd9b94fe8cc4ce4f95ac69
  main63 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main64
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
ec8218e294e0db90631cd903b647dc4e
  main64 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main123
                   Main.main65) -}
c69adafc1634de67cc0d96f4dcf112a6
  main65 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main106
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R
                   Main.main66) -}
dab194ebb0f2ed895946ccc88e92e83e
  main66 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main90
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R
                   Main.main67
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R) -}
cd85cdae0090dfa811b0f63266d05568
  main67 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main68
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4fb3888e885eca4aadc23fc80bed9ae8
  main68 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Main.main83
                   Main.main82
                   Main.main69 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
2993efd1eacf60440e3e4c663a27ecab
  main69 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Lib.Ligne
                   Main.main75
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main70
                   Main.main13) -}
c0ea69f8104241e6622a400bda10e0b7
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main38
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R
                   Main.main8
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R) -}
c74ab6c1243c6703b74894213ee012cb
  main70 :: Lib.Ligne
  {- Unfolding: (case Lib.$wtestLigne
                        Main.main71
                        Main.main41
                        1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
5ab9a5ced6ccdc20248667f4a11d511f
  main71 :: Data.Map.Base.Map (Lib.Colonne, Lib.Ligne) Lib.Couleur
  {- Unfolding: (Main.$sfromList @ Lib.Couleur Main.main72) -}
99c90c2880aec7c5af120c19667a55d5
  main72 :: [((Lib.Colonne, Lib.Ligne), Lib.Couleur)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ ((Lib.Colonne, Lib.Ligne), Lib.Couleur)
                   Main.main73
                   (GHC.Types.[] @ ((Lib.Colonne, Lib.Ligne), Lib.Couleur))) -}
8aaa91abc124ad8856fa238ad55abe51
  main73 :: ((GHC.Types.Int, GHC.Types.Int), Lib.Couleur)
  {- HasNoCafRefs, Unfolding: ((Main.main74, Lib.Bleu)) -}
006154b7765efe17bee69ca85925c9fa
  main74 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main13, Main.main13)) -}
bd657dbf69f7069e3ab560f9f9389fe0
  main75 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main76) -}
94435c021ecae3c20baee5c8d1d243ff
  main76 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main77
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
7801e29fddd96378bb1d79af6ee23a06
  main77 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main26, Main.main78)) -}
a72527aa752bb5602795b4af738934a5
  main78 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main81
                   Main.main80
                   Main.main81
                   Main.main79) -}
f33074a515c5a20dab1e7ebc9b1896c1
  main79 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 75) -}
4c36ec0e8667257d9dbee9a0a2f0794d
  main8 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main9
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
1344dbeccac07a2c32bc78eed73080d3
  main80 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 65) -}
0915e375533034b430417b1bd4144cef
  main81 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 14) -}
1536ad82f4b4d232f03c079f9191825c
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Pour une colonne 1 avec un \\195\\169l\\195\\169ment, la premi\\195\\168re ligne vide de la colonne 2 est 1"#) -}
aedcfecf91c8326400a6ca6ea4eab0bb
  main83 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Main.main84
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
931f99f6e42e1da63f8260df741578ef
  main84 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main85) -}
71f7ca3d6e308c286a6f1dfe06642a6a
  main85 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Main.main86) -}
137d432c2b7cea1e8e8881e31bfe8c93
  main86 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main87
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
e545d4da7023e4a262c82bcdee55fa73
  main87 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main37, Main.main88)) -}
6065d36e6cbef6a10103d2828849c3ee
  main88 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main89
                   Main.main35
                   Main.main89
                   Main.main34) -}
124c09c29b5ef8f0c96f6345fa430f77
  main89 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13) -}
0a81488260bb047d0a41d9a1991f5f0b
  main9 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Main.main28
                   Main.main27
                   Main.main10 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
27dea00975cddcb4f75022634acb59aa
  main90 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main91
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
60043cb2812c21ee7779485fb40bcdf4
  main91 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Main.main100
                   Main.main99
                   Main.main92 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
ad9e15e4b9c5f432e70796ee444220bc
  main92 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ Lib.Ligne
                   Main.main94
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInt
                   GHC.Classes.$fEqInt
                   Main.main93
                   Main.main41) -}
e09a35c9fdcc88f5616d687ed013a4a7
  main93 :: Lib.Ligne
  {- Unfolding: (case Lib.$wtestLigne
                        Main.main71
                        Main.main13
                        1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
941590a09f26cdd78e31bb7422f8d818
  main94 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Main.main95) -}
e3c21f0629bd207a73d82e47a5d52ff4
  main95 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Main.main96
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
fb63f43bffa9ff965ce4f670c7be389b
  main96 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Main.main26, Main.main97)) -}
cbbaa1356b9fb4e48f8c1e4914d33924
  main97 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main98
                   Main.main80
                   Main.main98
                   Main.main79) -}
cdb8296d3cd8480b7109521ba4301441
  main98 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12) -}
d9b2e7bc6429f0fe92b51fe0ca345d6e
  main99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "Pour une colonne avec un \\195\\169l\\195\\169ment, la premi\\195\\168re ligne vide est 2"#) -}
"SPEC/Main fromList @ (Colonne, Ligne) _" [ALWAYS] forall @ a
                                                          $dOrd :: GHC.Classes.Ord
                                                                     (Lib.Colonne, Lib.Ligne)
  Data.Map.Base.fromList @ (Lib.Colonne, Lib.Ligne) @ a $dOrd
  = Main.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

